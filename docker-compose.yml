version: "3.8"

services:
  openeodb:
    container_name: openeodb
    build:
      context: pgsql
    env_file: .env
    environment:
      POSTGRES_USER: openeouser
      POSTGRES_PASSWORD: openeopassword
      POSTGRES_DB: openeodb
      OPENEO_CLIENT_ID: ${USER_OPENEO_CLIENT_ID}
      OPENEO_CLIENT_SECRET: ${USER_OPENEO_CLIENT_SECRET}
    ports:
      - "${MAPPED_POSTGRES_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h openeodb" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - openeo-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    shm_size: '2gb'
    deploy:
      resources:
        limits:
            memory: 4g
          #cpus: '2.0'  # Limit to 2 CPU cores

  db_import:
    build:
      context: db_import
    container_name: db_import
    depends_on:
      openeodb:
        condition: service_healthy
    networks:
      - openeo-network

  ontop:
    container_name: ontop
    image: albulenpano/ontop-openeo:v1.1
    env_file: .env
    environment:
      #ONTOP_ONTOLOGY_FILE: /opt/ontop/input/openeo.owl
      ONTOP_MAPPING_FILE: /opt/ontop/input/openeo.obda
      ONTOP_PROPERTIES_FILE: /opt/ontop/input/openeo.properties
      ONTOP_PORTAL_FILE: /opt/ontop/input/openeo.toml
      ONTOP_CORS_ALLOWED_ORIGINS: "*"
      ONTOP_DEV_MODE: "true"
      ONTOP_LOG_LEVEL: "debug"
    volumes:
      - ./vkg:/opt/ontop/input
      - ./jdbc:/opt/ontop/jdbc
    depends_on:
      db_import:
        condition: service_completed_successfully
    ports:
      - "${ONTOP_SERVER_PORT}:8080"
    networks:
      - openeo-network
    extra_hosts:
      - "host.docker.internal:host-gateway"


networks:
  openeo-network:
    name: openeo-network
